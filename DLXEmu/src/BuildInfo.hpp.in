// ${CMAKE_AUTO_GENENERATED_WARNING}
#pragma once

#include <cstdint>

// clang-format off
// Versions
#define DLXEMU_VERSION_MAJOR ${DLXEMU_VERSION_MAJOR}
#define DLXEMU_VERSION_MINOR ${DLXEMU_VERSION_MINOR}
#define DLXEMU_VERSION_PATCH ${DLXEMU_VERSION_PATCH}

// Git Sha
#define DLXEMU_GIT_SHA_FULL  ${DLXEMU_GIT_SHA_FULL}
#define DLXEMU_GIT_SHA_SHORT ${DLXEMU_GIT_SHA_SHORT}

// Git Branch
#define DLXEMU_GIT_BRANCH "${DLXEMU_GIT_BRANCH}"

// uname
#define DLXEMU_UNAME "${DLXEMU_UNAME}"

// LSB (Linux Standard Base)
#define DLXEMU_LSB_ID          "${DLXEMU_LSB_ID}"
#define DLXEMU_LSB_DESCRIPTION "${DLXEMU_LSB_DESCRIPTION}"
#define DLXEMU_LSB_RELEASE     "${DLXEMU_LSB_RELEASE}"
#define DLXEMU_LSB_CODENAME    "${DLXEMU_LSB_CODENAME}"
// clang-format on

namespace dlxemu
{
    constexpr static std::uint32_t VersionMajor{DLXEMU_VERSION_MAJOR};
    constexpr static std::uint32_t VersionMinor{DLXEMU_VERSION_MINOR};
    constexpr static std::uint32_t VersionPatch{DLXEMU_VERSION_PATCH};

    constexpr static const char GitShaFull[]{DLXEMU_GIT_SHA_FULL};
    constexpr static const char GitShaShort[]{DLXEMU_GIT_SHA_SHORT};

    constexpr static const char GitBranch[]{DLXEMU_GIT_BRANCH};

    constexpr static const char BuildDate[]{__DATE__};
    constexpr static const char BuildTime[]{__TIME__};

    constexpr static const char UName[]{DLXEMU_UNAME};

    constexpr static const char LSBId[]{DLXEMU_LSB_ID};
    constexpr static const char LSBDescription[]{DLXEMU_LSB_DESCRIPTION};
    constexpr static const char LSBRelease[]{DLXEMU_LSB_RELEASE};
    constexpr static const char LSBCodeName[]{DLXEMU_LSB_CODENAME};
} // namespace dlxemu
