name: CreateRelease

on:
  workflow_dispatch:
    inputs:
      major_version:
        description: 'New major version'
        required: true
        default: '0'
      minor_version:
        description: 'New minor version'
        required: true
        default: '0'
      patch_version:
        description: 'New patch version'
        required: true
        default: '0'

jobs:
  create_release:
    permissions:
      contents: write

    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: develop
          fetch-depth: 0

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: '${{ github.event.inputs.major_version }}.${{ github.event.inputs.minor_version }}.${{ github.event.inputs.patch_version }}'

      - name: Merge develop -> main
        run: |
          git checkout main
          git merge develop
          git push

  deploy_assets_linux:
    runs-on: ubuntu-22.04
    needs: create_release

    strategy:
      matrix:
        cfg:
          - { compiler: gcc-13, flags: "-m32", arch_name: "x86-32" }
          - { compiler: gcc-13, flags: "-m64", arch_name: "x86-64" }

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
          submodules: recursive

      - name: Setup Environment
        run: external/Phi/scripts/ci/SetupEnvironment.sh

      - name: Install dependencies
        run: sudo scripts/ci/InstallDependencies.sh

      - name: Install compiler
        run: external/Phi/scripts/ci/InstallTools.sh ${{ matrix.cfg.compiler }} ninja

      - name: Configure build directory
        run: |
          mkdir build -p
          cd build

          flags="-D_FORTIFY_SOURCE=2 -D_GLIBCXX_ASSERTIONS -fstack-clash-protection -fstack-protector-strong -fcf-protection -Wl,-z,defs -Wl,-z,now -Wl,-z,relro ${{ matrix.cfg.flags }}"

          cmake -DCMAKE_BUILD_TYPE:STRING="Release" -DCMAKE_C_FLAGS:STRING="$flags" -DCMAKE_CXX_FLAGS:STRING="$flags" -DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=ON ..

      - name: Build
        working-directory: ./build
        run: cmake --build . --config Release --target "DLXEmu"

      - name: Strip binary
        working-directory: ./build/bin
        run: strip DLXEmu

      - name: Determine asset name
        run: echo "RELEASE_NAME=dlxemu-${{ github.event.release.name }}-linux-${{ matrix.cfg.arch_name }}" >> "$GITHUB_ENV"

      - name: Package build artifacts
        working-directory: ./build
        run: |
          zip       ${{ env.RELEASE_NAME }}.zip bin/DLXEmu
          sha256sum ${{ env.RELEASE_NAME }}.zip > ${{ env.RELEASE_NAME }}.zip.sha256

          tar -czvf ${{ env.RELEASE_NAME }}.tar.gz bin/DLXEmu
          sha256sum ${{ env.RELEASE_NAME }}.tar.gz > ${{ env.RELEASE_NAME }}.tar.gz.sha256

      - name: Upload Release asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: '${{ github.event.inputs.major_version }}.${{ github.event.inputs.minor_version }}.${{ github.event.inputs.patch_version }}'
          files: |
            build/${{ env.RELEASE_NAME }}.zip
            build/${{ env.RELEASE_NAME }}.zip.sha256
            build/${{ env.RELEASE_NAME }}.tar.gz
            build/${{ env.RELEASE_NAME }}.tar.gz.sha256
