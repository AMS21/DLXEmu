name: CodeCoverage

on:
  push:
    paths:
      # Workflow file itself
      - '.github/workflows/CodeCoverage.yml'
      # C++ files
      - '**.cpp'
      - '**.hpp'
      # CMake files
      - '**.cmake'
      - '**.txt'
      # Script files
      - '**.sh'
    tags:
    branches-ignore:
      - 'dependabot/**'
  pull_request:
    branches:
      - main
      - develop
  release:
    types: [published]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  linux:
    runs-on: ubuntu-22.04
    env:
      LLVM_PROFILE_FILE: "profile-%p.profraw"

    strategy:
      fail-fast: false

      matrix:
        compiler:
          - "gcc-12"

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install cmake
        uses: lukka/get-cmake@v3.25.2

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ matrix.os }}-${{ matrix.compiler }}

      - name: Install dependencies
        run: sudo scripts/ci/InstallDependencies.sh

      - name: Setup Environment
        run: external/Phi/scripts/ci/SetupEnvironment.sh

      - name: Install compiler
        run: external/Phi/scripts/ci/InstallTools.sh ${{ matrix.compiler }} ninja gcovr

      - name: Configure build directory
        run: |
          mkdir build -p
          cd build

          cmake -DCMAKE_BUILD_TYPE=Debug -DDLXEMU_COVERAGE_BUILD:BOOL=ON -DCMAKE_CXX_FLAGS="-DDLXEMU_VERIFY_UNDO_REDO -DDLXEMU_VERIFY_COLUMN -DPHI_DEBUG" ..

      - name: Build
        working-directory: ./build
        run: cmake --build . --config Debug

      - name: Run tests
        working-directory: ./build
        run: ctest . -C Debug

      - name: Checkout Corpus
        uses: actions/checkout@v3
        with:
          repository: "AMS21/DLXEmu-Corpus"
          path: DLXEmu-Corpus
          token: ${{ secrets.CORPUS_PAT }}

      - name: Run fuzzers
        run: |
          cd build

          all_input_corpus=$(find ../DLXEmu-Corpus -type d -iname "Corpus" -or -iname "Seed" -printf "%p ")
          echo "Input Corpora: $all_input_corpus"

          mkdir -p TempCorpus

          find bin -type f -iname "fuzz_*" -exec bash -c 'echo Running ${0}; ${0} TempCorpus $all_input_corpus -max_total_time=$FUZZ_TIME -close_fd_mask=1' {} \;

      - name: Process coverage data
        working-directory: ./build
        run: gcovr -j $PROC_COUNT --delete --root ../ --print-summary --xml-pretty --xml coverage.xml . --gcov-executable "$GCOV_EXECUTABLE"

      - name: Upload coverage data
        uses: codecov/codecov-action@v3.1.1
        with:
          file: ./build/coverage.xml
          flags: ${{ runner.os }},${{ matrix.compiler }}
          name: ${{ runner.os }}-${{ matrix.compiler }}
