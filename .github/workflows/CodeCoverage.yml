name: CodeCoverage

on:
  push:
    paths:
      # Workflow file itself
      - '.github/workflows/CodeCoverage.yml'
      # C++ files
      - '**.cpp'
      - '**.hpp'
      # CMake files
      - '**.cmake'
      - '**.txt'
      # Script files
      - '**.sh'
    branches-ignore:
      - 'dependabot/**'
  pull_request:
    branches:
      - main
      - develop
  release:
    types: [published]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CMAKE_C_COMPILER_LAUNCHER: "ccache"
  CMAKE_CXX_COMPILER_LAUNCHER: "ccache"

jobs:
  linux:
    runs-on: ubuntu-24.04

    env:
      LLVM_PROFILE_FILE: "profile-%p.profraw"

    strategy:
      fail-fast: false

      matrix:
        compiler:
          - "gcc-14"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Environment
        run: external/Phi/scripts/ci/SetupEnvironment.sh

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: ${{ runner.os }}-${{ matrix.compiler }}

      - name: Install dependencies
        run: sudo scripts/ci/InstallDependencies.sh

      - name: Install compiler
        run: external/Phi/scripts/ci/InstallTools.sh ${{ matrix.compiler }} ninja

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: 'pip'

      - name: Install gcovr
        run: pip install gcovr

      - name: Configure build directory
        run: |
          mkdir build -p
          cd build

          cmake -DCMAKE_AR=${AR_EXECUTABLE} -DCMAKE_BUILD_TYPE=Debug -DDLXEMU_COVERAGE_BUILD:BOOL=ON -DCMAKE_CXX_FLAGS="-DDLXEMU_VERIFY_UNDO_REDO -DDLXEMU_VERIFY_COLUMN -DPHI_DEBUG" ..

      - name: Build
        working-directory: ./build
        run: cmake --build . --config Debug

      - name: Run tests
        working-directory: ./build
        run: ctest . -C Debug

      - name: Process coverage data
        working-directory: ./build
        run: gcovr -j ${PROC_COUNT} --delete --root ../ --exclude-unreachable-branches --exclude-function-lines --print-summary --xml-pretty --xml coverage.xml . --gcov-executable "${GCOV_EXECUTABLE}"

      - name: Upload coverage data
        uses: codecov/codecov-action@v5
        with:
          files: ./build/coverage.xml
          flags: ${{ runner.os }},${{ matrix.compiler }}
          name: ${{ runner.os }}-${{ matrix.compiler }}
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
