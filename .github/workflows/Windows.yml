name: Windows

on:
  push:
    paths:
      # Workflow file itself
      - '.github/workflows/Windows.yml'
      # C++ files
      - '**.cpp'
      - '**.hpp'
      # CMake files
      - '**.cmake'
      - '**.txt'
      # Script files
      - '**.sh'
    branches-ignore:
      - 'dependabot/**'
  pull_request:
    branches:
      - main
      - develop
  release:
    types: [published]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Build:
    runs-on: windows-2022

    # Default windows to use bash
    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false

      matrix:
        cfg:
          - { compiler: cl }
          #- { compiler: g++ }
          #- { compiler: clang++ }
          #- { compiler: clang++, sanitizer: "ubsan" }

        build_type:
          - "Debug"
          - "Release"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: 'pip'

      - name: Setup Environment
        run: external/Phi/scripts/ci/SetupEnvironment.sh

      - name: Install
        shell: powershell
        run: |
          # Install scoop
          iwr -useb get.scoop.sh -outfile 'install.ps1'
          .\install.ps1 -RunAsAdmin

          # Install required compilers
          if ("${{ matrix.cfg.compiler }}".StartsWith("clang")) {
            # Clang
            scoop install llvm --global
            echo "CXX=${{ matrix.cfg.compiler }}" >> $GITHUB_ENV
            echo "C:\ProgramData\scoop\apps\llvm\current\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          }
          elseif ("${{ matrix.cfg.compiler }}" -eq "g++") {
            # GCC
            scoop install gcc --global
            echo "CXX=${{ matrix.cfg.compiler }}" >> $GITHUB_ENV
            echo "C:\ProgramData\scoop\apps\gcc\current\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          }

          scoop install ninja --global

          pip install jinja2

      - name: Setup msvc dev
        if: matrix.cfg.compiler == 'cl'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Configure build directory
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE:STRING=${{ matrix.build_type }} -DCMAKE_CXX_FLAGS:STRING="-DDLXEMU_VERIFY_UNDO_REDO -DDLXEMU_VERIFY_COLUMN" ..

      - name: Build
        working-directory: ./build
        run: cmake --build . --config ${{ matrix.build_type }}

      - name: Run tests
        working-directory: ./build
        run: ctest . -C ${{ matrix.build_type }}
